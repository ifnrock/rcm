Алгоритм выработки рекомендаций состоит из двух частей.

Задача первой части - сформировать профили пользователей. Вторая часть на основе построенных профилей пользователей считает рекомендацию.

Формирование профилей пользователей.

Профиль пользователя строится для некоторого множества объектов. В нашей задаче в качестве объектов выступают страницы сайта (ресурсы сайта). В профиле каждому ресурсу соответствует некоторое действительное число от нуля до единицы. Число определяет интерес ресурса для посетителя сайта. Т.е., профиль представляет из себя множесто пар с ресурсами и их оценками. Каждый "паттерн поведения" пользователей задает свой профиль.

Исходным источником информации для построения профилей пользователей может выступать access.log веб-сервера. В access.log-е логируются обращения к сайту. В веб-сервере nginx по умолчанию запросы логируются строками следующего вида:
192.33.5.1 - - [21/Apr/2013:23:16:10 +0400] "GET /some_page.html HTTP/1.1" 200 498 "-" "-".
Лог должен быть распарсен до получения пар <ip, url> для каждого удачного (status code 200) GET-запроса. Каждая такая пара соответствует запросу ресурса с определённого ip. Объединяя запрошенные с каждого ip ресурсы и "нормализуя" по всему множеству ресурсов сайта мы получаем сессию пользователя - булевский вектор запрошенных ресурсов.

В силу существования NAT ip-адрес далеко не всегда соответствует одному пользователю. Чтобы идентифицировать пользователя в запросах сайты обычно проставляют куку. Т.е., сессию пользователя можно формировать, группируя запросы по куке.

Полученное множество пользовательских сессий необходимо кластеризовать. Алгоритм кластеризации - параметризуемая часть процедуры формирования профилей. При реализации приложения был выбран метод k-средних. Ограничением метода k-средних является необходимость указания числа кластеров. Число кластеров должно быть задано экспертом или получено экспериментально. Если предполагаемые "паттерны поведения" неизвестны, то можно применить, например, алгоритм выделения связных компонент.

Каждому полученному кластеру следует сопоставить профиль пользователя - вектор частот появления каждого ресурса в кластере. Каждый профиль будет соответствовать некоторому "паттерну поведения" пользователей и позволит строить простые суждения типа: "Если человек посетил страницу X, то он посетит и страницу Y".

Посчитанные профили пользователей составляют результат предварительной части алгоритма выработки рекомендаций и должны быть сохранены в базе данных для последующего использования.

Выработка рекомендаций.

Рекомендация - множество пар, где каждому ресурсу поставлено в соответствие действительное число от нуля до единицы, характеризующее интерес ресурса для данного пользователя.

Рекомендация вычисляется для конкретной сессии пользователя. Под сессией пользователя понимается множество уже просмотренных страниц.

Множество пользовательских профилей на этапе выработки рекомендаций интерпретируется как нечёткое отношение на схеме профиль пользователя X урл и соответствует базе правил вида: "Если сессия пользователя близка к профилю пользователя (i), то ей подходит/пользователю интересен урл (j)".

В качестве меры близости использован косинусный коэффициент (мера Охаи).

Далее делается нечёткий вывод по алгоритму Мамдани, т.е. для каждого ресурса в каждом профиле пользователя вычисляется минимум близости пользовательской сессии к профилю пользователя и значения импликации профиль => урл, а полученные значения консеквента агрегируются с помощью операции max.

Операции min и max являются частными случаями t-нормы и t-конормы соответственно.

Таким образом, итерацией по ресурсам мы получаем словарь оценок с ресурсами в качестве ключей. Такой словарь рекомендаций должен возращаться для пользовательской сессии и генерится при запросе "на лету".

